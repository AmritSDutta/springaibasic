spring.application.name=spring-ai-demo
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.embedding.options.model=text-embedding-3-small
#spring.ai.vectorstore.pgvector.index-type=HNSW
#spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
#spring.ai.vectorstore.pgvector.dimensions=512
#spring.ai.vectorstore.pgvector.max-document-batch-size=10
#spring.ai.vectorstore.pgvector.table-name=wines


spring.datasource.url= jdbc:postgresql://localhost:5432/wine_review
spring.datasource.username=user
spring.datasource.password=password

# Logs executed SQL queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Optional: log values (for JDBC, this logs PreparedStatement bindings)
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.level.org.springframework.ai=DEBUG
#logging.level.io.modelcontextprotocol.client=DEBUG

spring.ai.vectorstore.chroma.client.host=http://localhost
spring.ai.vectorstore.chroma.client.port=8000


# Chroma Vector Store collection properties
spring.ai.vectorstore.chroma.initialize-schema=false
spring.ai.vectorstore.chroma.collection-name=WineReviews
spring.ai.vectorstore.chroma.database-name=default_database
spring.ai.vectorstore.chroma.tenant-name=default_tenant


#spring.ai.mcp.client.sse.connections.CityInfo.url=http://localhost:8091
#spring.ai.mcp.client.initialized=true
#spring.ai.mcp.client.enabled=true
#spring.ai.mcp.client.name=my-mcp-client
#spring.ai.mcp.client.version=1.0.0
#spring.ai.mcp.client.request-timeout=30s
#spring.ai.mcp.client.toolcallback.enabled=true
#spring.ai.mcp.client.type=SYNC
